{"ast":null,"code":"import _toConsumableArray from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rishabhwaykole/Downloads/ImageViewer-main/src/screens/profile/profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PROFILE_ICON from \"../../assets/profile_icon.png\";\nimport \"./profile.css\";\nimport { Avatar, Modal, FormControl, InputLabel, Input, Button } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getAllMyMedia } from \"../../common/api\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport ImageDetails from \"./image-details\";\nimport { mockResponse } from \"../../common/utilities\";\n\nfunction getModalStyle() {\n  var top = 50 + 10;\n  var left = 50 + 10;\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    editFormContainer: {\n      position: \"absolute\",\n      width: 300,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #7f7f7f\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 1000\n    }\n  };\n});\n\nvar Profile = function Profile() {\n  var classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  var _useState = useState(getModalStyle),\n      _useState2 = _slicedToArray(_useState, 1),\n      modalStyle = _useState2[0];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fullName = _useState8[0],\n      setFullName = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      images = _useState10[0],\n      setImages = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageDetails = _useState12[0],\n      setImageDetails = _useState12[1];\n\n  var _useState13 = useState(PROFILE_ICON),\n      _useState14 = _slicedToArray(_useState13, 1),\n      userIcon = _useState14[0];\n\n  var _useState15 = useState({\n    fullName: \"Upgrad Education\",\n    totalPost: 0,\n    follows: Math.floor(Math.random() * 10),\n    followedBy: Math.floor(Math.random() * 10),\n    username: \"\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userDetails = _useState16[0],\n      setUserDetails = _useState16[1];\n\n  useEffect(function () {\n    getAllMyMedia().then(function (response) {\n      if (response.data && Array.isArray(response.data) && response.data.length > 0) {\n        setUserDetails(_objectSpread({}, userDetails, {\n          totalPost: response.data.length,\n          username: response.data[0].username\n        }));\n        setImages(mockResponse(response.data));\n      }\n    });\n  }, []);\n\n  var handleOpen = function handleOpen() {\n    setFullName(userDetails.fullName);\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    setFullName(\"\");\n  };\n\n  var updateFullName = function updateFullName() {\n    if (!fullName) {\n      setError(true);\n      return;\n    }\n\n    setOpen(false);\n    setUserDetails(_objectSpread({}, userDetails, {\n      fullName: fullName\n    }));\n    setFullName(\"\");\n  };\n\n  var likeHandler = function likeHandler() {\n    images.forEach(function (item) {\n      if (item.id === imageDetails.id) {\n        if (item.likedByme) {\n          item.likes--;\n          item[\"likedByme\"] = false;\n        } else {\n          item.likes++;\n          item[\"likedByme\"] = true;\n        }\n\n        setImageDetails(_objectSpread({}, item));\n      }\n    });\n    setImages(_toConsumableArray(images));\n  };\n\n  var commentHandler = function commentHandler(comment) {\n    images.forEach(function (item) {\n      if (item.id === imageDetails.id) {\n        item.comments.push({\n          username: item.username,\n          comment: comment\n        });\n        setImageDetails(_objectSpread({}, item));\n      }\n    });\n    setImages(_toConsumableArray(images));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"profile-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-info-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: userIcon,\n    className: \"profile-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"name-counts-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, userDetails.username)), React.createElement(\"div\", {\n    className: \"counts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Post: \", userDetails.totalPost), React.createElement(\"span\", {\n    className: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Follows: \", userDetails.follows), React.createElement(\"span\", {\n    className: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Followed By: \", userDetails.followedBy)), React.createElement(\"div\", {\n    className: \"full-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, userDetails.fullName)), React.createElement(EditIcon, {\n    className: \"edit-icon\",\n    varinat: \"circular\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"editFormContainer\",\n    style: modalStyle,\n    className: classes.editFormContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Full Name *\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"user-full-name\",\n    \"aria-describedby\": \"my-helper-text\",\n    value: fullName,\n    onChange: function onChange(event) {\n      setError(false);\n      setFullName(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), error && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"required\")), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: false,\n    onClick: updateFullName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"UPDATE\")))))), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, images.map(function (tile) {\n    return React.createElement(GridListTile, {\n      key: tile.id,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tile.media_url,\n      alt: tile.id,\n      onClick: function onClick() {\n        return setImageDetails(tile);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }));\n  }))), imageDetails && React.createElement(ImageDetails, {\n    imageDetails: imageDetails,\n    handleClose: function handleClose() {\n      return setImageDetails(null);\n    },\n    likeHandler: likeHandler,\n    commentHandler: commentHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/rishabhwaykole/Downloads/ImageViewer-main/src/screens/profile/profile.js"],"names":["React","useState","useEffect","PROFILE_ICON","Avatar","Modal","FormControl","InputLabel","Input","Button","EditIcon","makeStyles","getAllMyMedia","GridList","GridListTile","ImageDetails","mockResponse","getModalStyle","top","left","transform","useStyles","theme","editFormContainer","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","root","display","flexWrap","justifyContent","overflow","gridList","Profile","classes","modalStyle","open","setOpen","error","setError","fullName","setFullName","images","setImages","imageDetails","setImageDetails","userIcon","totalPost","follows","Math","floor","random","followedBy","username","userDetails","setUserDetails","then","response","data","Array","isArray","length","handleOpen","handleClose","updateFullName","likeHandler","forEach","item","id","likedByme","likes","commentHandler","comment","comments","push","event","target","value","map","tile","media_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PROFILE_ICON from \"../../assets/profile_icon.png\";\nimport \"./profile.css\";\nimport {\n  Avatar,\n  Modal,\n  FormControl,\n  InputLabel,\n  Input,\n  Button\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getAllMyMedia } from \"../../common/api\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport ImageDetails from \"./image-details\";\nimport { mockResponse } from \"../../common/utilities\";\n\nfunction getModalStyle() {\n  const top = 50 + 10;\n  const left = 50 + 10;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  editFormContainer: {\n    position: \"absolute\",\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #7f7f7f\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 1000\n  }\n}));\n\nconst Profile = () => {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(false);\n  const [fullName, setFullName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [imageDetails, setImageDetails] = useState(null);\n  const [userIcon] = useState(PROFILE_ICON);\n\n  const [userDetails, setUserDetails] = useState({\n    fullName: \"Upgrad Education\",\n    totalPost: 0,\n    follows: Math.floor(Math.random() * 10),\n    followedBy: Math.floor(Math.random() * 10),\n    username: \"\"\n  });\n\n  useEffect(() => {\n    getAllMyMedia().then(response => {\n      if (\n        response.data &&\n        Array.isArray(response.data) &&\n        response.data.length > 0\n      ) {\n        setUserDetails({\n          ...userDetails,\n          totalPost: response.data.length,\n          username: response.data[0].username\n        });\n        setImages(mockResponse(response.data));\n      }\n    });\n  }, []);\n\n  const handleOpen = () => {\n    setFullName(userDetails.fullName);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFullName(\"\");\n  };\n\n  const updateFullName = () => {\n    if (!fullName) {\n      setError(true);\n      return;\n    }\n    setOpen(false);\n    setUserDetails({\n      ...userDetails,\n      fullName: fullName\n    });\n    setFullName(\"\");\n  };\n\n  const likeHandler = () => {\n    images.forEach(item => {\n      if (item.id === imageDetails.id) {\n        if (item.likedByme) {\n          item.likes--;\n          item[\"likedByme\"] = false;\n        } else {\n          item.likes++;\n          item[\"likedByme\"] = true;\n        }\n\n        setImageDetails({ ...item });\n      }\n    });\n    setImages([...images]);\n  };\n\n  const commentHandler = comment => {\n    images.forEach(item => {\n      if (item.id === imageDetails.id) {\n        item.comments.push({\n          username: item.username,\n          comment: comment\n        });\n        setImageDetails({ ...item });\n      }\n    });\n    setImages([...images]);\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"user-info-container\">\n        <Avatar src={userIcon} className=\"profile-icon\" />\n        <div className=\"name-counts-container\">\n          <div>\n            <strong>{userDetails.username}</strong>\n          </div>\n          <div className=\"counts\">\n            <span className=\"count\">Post: {userDetails.totalPost}</span>\n            <span className=\"count\">Follows: {userDetails.follows}</span>\n            <span className=\"count\">Followed By: {userDetails.followedBy}</span>\n          </div>\n          <div className=\"full-name\">\n            <span>\n              <strong>{userDetails.fullName}</strong>\n            </span>\n            <EditIcon\n              className=\"edit-icon\"\n              varinat=\"circular\"\n              onClick={handleOpen}\n            />\n            <Modal\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              <div id=\"editFormContainer\" style={modalStyle} className={classes.editFormContainer}>\n                <h2 id=\"modal-title\">Edit</h2>\n                <FormControl fullWidth={true}>\n                  <InputLabel htmlFor=\"my-input\">Full Name *</InputLabel>\n                  <Input\n                    type=\"text\"\n                    id=\"user-full-name\"\n                    aria-describedby=\"my-helper-text\"\n                    value={fullName}\n                    onChange={event => {\n                      setError(false);\n                      setFullName(event.target.value);\n                    }}\n                  />\n                  {error && <span className=\"error-message\">required</span>}\n                </FormControl>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth={false}\n                  onClick={updateFullName}\n                >\n                  UPDATE\n                </Button>\n              </div>\n            </Modal>\n          </div>\n        </div>\n      </div>\n      <div className={classes.root}>\n        <GridList className={classes.gridList} cols={3}>\n          {images.map(tile => (\n            <GridListTile key={tile.id} cols={1}>\n              <img\n                src={tile.media_url}\n                alt={tile.id}\n                onClick={() => setImageDetails(tile)}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n      {imageDetails && (\n        <ImageDetails\n          imageDetails={imageDetails}\n          handleClose={() => setImageDetails(null)}\n          likeHandler={likeHandler}\n          commentHandler={commentHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}