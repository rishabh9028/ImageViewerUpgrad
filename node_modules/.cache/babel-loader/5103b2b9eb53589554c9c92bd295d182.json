{"ast":null,"code":"import _defineProperty from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/rishabhwaykole/Downloads/ImageViewer-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rishabhwaykole/Downloads/ImageViewer-main/src/screens/home/home.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./home.css\";\nimport { formatDate, mockResponse } from \"../../common/utilities\";\nimport { getAllMyMedia } from \"../../common/api\";\nimport PROFILE_ICON from \"../../assets/profile_icon.png\";\nimport { Card, CardContent, Avatar, CardHeader, Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport AppContext from \"../../common/app-context\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nvar Home = function Home() {\n  var _useContext = useContext(AppContext),\n      searchKey = _useContext.searchKey;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagesResponse = _useState2[0],\n      setImagesResponse = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredData = _useState4[0],\n      setFilteredData = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      comments = _useState6[0],\n      setComments = _useState6[1];\n\n  var _useState7 = useState(PROFILE_ICON),\n      _useState8 = _slicedToArray(_useState7, 1),\n      userIcon = _useState8[0];\n\n  useEffect(function () {\n    getAllMyMedia().then(function (res) {\n      setImagesResponse(mockResponse(res.data || []));\n    }).catch(function (error) {\n      console.log(\"get all image error\", error);\n    });\n  }, []);\n  useEffect(function () {\n    if (searchKey) {\n      var results = imagesResponse.filter(function (image) {\n        return (image.caption || \"\").includes(searchKey);\n      });\n      setFilteredData(results);\n    } else {\n      setFilteredData(imagesResponse);\n    }\n  }, [searchKey, imagesResponse]);\n\n  var likeHandler = function likeHandler(postId) {\n    imagesResponse.forEach(function (item) {\n      if (item.id === postId) {\n        if (item.likedByme) {\n          item.likes--;\n          item[\"likedByme\"] = false;\n        } else {\n          item.likes++;\n          item[\"likedByme\"] = true;\n        }\n      }\n    });\n    setImagesResponse(_toConsumableArray(imagesResponse));\n  };\n\n  var commentHandler = function commentHandler(postId) {\n    imagesResponse.forEach(function (item) {\n      if (item.id === postId) {\n        item.comments.push({\n          username: item.username,\n          comment: comments[postId]\n        });\n      }\n    });\n    setComments(_objectSpread({}, comments, _defineProperty({}, postId, \"\")));\n    setImagesResponse(_toConsumableArray(imagesResponse));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"home-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, filteredData.map(function (item) {\n    return React.createElement(Card, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      avatar: React.createElement(Avatar, {\n        src: userIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      title: item.username,\n      subheader: formatDate(item.timestamp),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.media_url,\n      alt: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, item.caption || \"   \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, item.hashtags && item.hashtags.map(function (hashtag) {\n      return React.createElement(\"span\", {\n        className: \"hashtag\",\n        key: hashtag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"#\", hashtag);\n    })), React.createElement(\"div\", {\n      className: \"likes-container\",\n      onClick: function onClick() {\n        return likeHandler(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, item.likedByme ? React.createElement(Favorite, {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : React.createElement(FavoriteBorder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), item.likes && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, item.likes, \" likes\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, item.comments.map(function (comment, index) {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, comment.username), \":\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, comment.comment));\n    })), React.createElement(\"div\", {\n      className: \"comments-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"my-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Add comment\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"my-input\",\n      value: comments[item.id] || \"\",\n      onChange: function onChange(event) {\n        setComments(_objectSpread({}, comments, _defineProperty({}, item.id, event.target.value)));\n      },\n      \"aria-describedby\": \"my-helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: false,\n      onClick: function onClick() {\n        return commentHandler(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"ADD\"))));\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/rishabhwaykole/Downloads/ImageViewer-main/src/screens/home/home.js"],"names":["React","useState","useEffect","useContext","formatDate","mockResponse","getAllMyMedia","PROFILE_ICON","Card","CardContent","Avatar","CardHeader","Button","FormControl","Input","InputLabel","AppContext","Favorite","FavoriteBorder","Home","searchKey","imagesResponse","setImagesResponse","filteredData","setFilteredData","comments","setComments","userIcon","then","res","data","catch","error","console","log","results","filter","image","caption","includes","likeHandler","postId","forEach","item","id","likedByme","likes","commentHandler","push","username","comment","map","timestamp","media_url","hashtags","hashtag","color","index","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,YAAP;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,wBAAzC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,WANF,EAOEC,KAPF,EAQEC,UARF,QASO,mBATP;AAUA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,oBAAzC;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,oBACKhB,UAAU,CAACa,UAAD,CADf;AAAA,MACTI,SADS,eACTA,SADS;;AAAA,kBAE2BnB,QAAQ,CAAC,EAAD,CAFnC;AAAA;AAAA,MAEVoB,cAFU;AAAA,MAEMC,iBAFN;;AAAA,mBAGuBrB,QAAQ,CAAC,EAAD,CAH/B;AAAA;AAAA,MAGVsB,YAHU;AAAA,MAGIC,eAHJ;;AAAA,mBAIevB,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,MAIVwB,QAJU;AAAA,MAIAC,WAJA;;AAAA,mBAKEzB,QAAQ,CAACM,YAAD,CALV;AAAA;AAAA,MAKVoB,QALU;;AAOjBzB,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,aAAa,GACVsB,IADH,CACQ,UAAAC,GAAG,EAAI;AACXP,MAAAA,iBAAiB,CAACjB,YAAY,CAACwB,GAAG,CAACC,IAAJ,IAAY,EAAb,CAAb,CAAjB;AACD,KAHH,EAIGC,KAJH,CAIS,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA9B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,SAAJ,EAAe;AACb,UAAIe,OAAO,GAAGd,cAAc,CAACe,MAAf,CAAsB,UAAAC,KAAK;AAAA,eACvC,CAACA,KAAK,CAACC,OAAN,IAAiB,EAAlB,EAAsBC,QAAtB,CAA+BnB,SAA/B,CADuC;AAAA,OAA3B,CAAd;AAIAI,MAAAA,eAAe,CAACW,OAAD,CAAf;AACD,KAND,MAMO;AACLX,MAAAA,eAAe,CAACH,cAAD,CAAf;AACD;AACF,GAVQ,EAUN,CAACD,SAAD,EAAYC,cAAZ,CAVM,CAAT;;AAYA,MAAMmB,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM,EAAI;AAC5BpB,IAAAA,cAAc,CAACqB,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,UAAIA,IAAI,CAACC,EAAL,KAAYH,MAAhB,EAAwB;AACtB,YAAIE,IAAI,CAACE,SAAT,EAAoB;AAClBF,UAAAA,IAAI,CAACG,KAAL;AACAH,UAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,KAApB;AACD,SAHD,MAGO;AACLA,UAAAA,IAAI,CAACG,KAAL;AACAH,UAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,IAApB;AACD;AACF;AACF,KAVD;AAWArB,IAAAA,iBAAiB,oBAAKD,cAAL,EAAjB;AACD,GAbD;;AAeA,MAAM0B,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,MAAM,EAAI;AAC/BpB,IAAAA,cAAc,CAACqB,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,UAAIA,IAAI,CAACC,EAAL,KAAYH,MAAhB,EAAwB;AACtBE,QAAAA,IAAI,CAAClB,QAAL,CAAcuB,IAAd,CAAmB;AACjBC,UAAAA,QAAQ,EAAEN,IAAI,CAACM,QADE;AAEjBC,UAAAA,OAAO,EAAEzB,QAAQ,CAACgB,MAAD;AAFA,SAAnB;AAID;AACF,KAPD;AAQAf,IAAAA,WAAW,mBACND,QADM,sBAERgB,MAFQ,EAEC,EAFD,GAAX;AAIAnB,IAAAA,iBAAiB,oBAAKD,cAAL,EAAjB;AACD,GAdD;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAAC4B,GAAb,CAAiB,UAAAR,IAAI,EAAI;AACxB,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEjB,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAEgB,IAAI,CAACM,QAFd;AAGE,MAAA,SAAS,EAAE7C,UAAU,CAACuC,IAAI,CAACS,SAAN,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAET,IAAI,CAACU,SAAf;AAA0B,MAAA,GAAG,EAAEV,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASD,IAAI,CAACL,OAAL,IAAgB,KAAzB,CADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,IAAI,CAACW,QAAL,IACCX,IAAI,CAACW,QAAL,CAAcH,GAAd,CAAkB,UAAAI,OAAO,EAAI;AAC3B,aACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,GAAG,EAAEA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACIA,OADJ,CADF;AAKD,KAND,CAFJ,CARF,EAkBE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMf,WAAW,CAACG,IAAI,CAACC,EAAN,CAAjB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGD,IAAI,CAACE,SAAL,GACC,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EASGb,IAAI,CAACG,KAAL,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,IAAI,CAACG,KAAZ,WATjB,CAlBF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,IAAI,CAAClB,QAAL,CAAc0B,GAAd,CAAkB,UAACD,OAAD,EAAUO,KAAV,EAAoB;AACrC,aACE;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASP,OAAO,CAACD,QAAjB,CADF,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,OAAO,CAACA,OAAf,CAFF,CADF;AAMD,KAPA,CADH,CA7BF,EAuCE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAEzB,QAAQ,CAACkB,IAAI,CAACC,EAAN,CAAR,IAAqB,EAH9B;AAIE,MAAA,QAAQ,EAAE,kBAAAc,KAAK,EAAI;AACjBhC,QAAAA,WAAW,mBACND,QADM,sBAERkB,IAAI,CAACC,EAFG,EAEEc,KAAK,CAACC,MAAN,CAAaC,KAFf,GAAX;AAID,OATH;AAUE,0BAAiB,gBAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAiBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAE,KAHb;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMb,cAAc,CAACJ,IAAI,CAACC,EAAN,CAApB;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBF,CAvCF,CANF,CADF;AA2ED,GA5EA,CADH,CADF;AAiFD,CA7ID;;AA8IA,eAAezB,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport \"./home.css\";\nimport { formatDate, mockResponse } from \"../../common/utilities\";\nimport { getAllMyMedia } from \"../../common/api\";\nimport PROFILE_ICON from \"../../assets/profile_icon.png\";\nimport {\n  Card,\n  CardContent,\n  Avatar,\n  CardHeader,\n  Button,\n  FormControl,\n  Input,\n  InputLabel\n} from \"@material-ui/core\";\nimport AppContext from \"../../common/app-context\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\nconst Home = () => {\n  const { searchKey } = useContext(AppContext);\n  const [imagesResponse, setImagesResponse] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [comments, setComments] = useState({});\n  const [userIcon] = useState(PROFILE_ICON);\n\n  useEffect(() => {\n    getAllMyMedia()\n      .then(res => {\n        setImagesResponse(mockResponse(res.data || []));\n      })\n      .catch(error => {\n        console.log(\"get all image error\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (searchKey) {\n      let results = imagesResponse.filter(image =>\n        (image.caption || \"\").includes(searchKey)\n      );\n\n      setFilteredData(results);\n    } else {\n      setFilteredData(imagesResponse);\n    }\n  }, [searchKey, imagesResponse]);\n\n  const likeHandler = postId => {\n    imagesResponse.forEach(item => {\n      if (item.id === postId) {\n        if (item.likedByme) {\n          item.likes--;\n          item[\"likedByme\"] = false;\n        } else {\n          item.likes++;\n          item[\"likedByme\"] = true;\n        }\n      }\n    });\n    setImagesResponse([...imagesResponse]);\n  };\n\n  const commentHandler = postId => {\n    imagesResponse.forEach(item => {\n      if (item.id === postId) {\n        item.comments.push({\n          username: item.username,\n          comment: comments[postId]\n        });\n      }\n    });\n    setComments({\n      ...comments,\n      [postId]: \"\"\n    });\n    setImagesResponse([...imagesResponse]);\n  };\n\n  return (\n    <div className=\"home-container\">\n      {filteredData.map(item => {\n        return (\n          <Card key={item.id}>\n            <CardHeader\n              avatar={<Avatar src={userIcon} />}\n              title={item.username}\n              subheader={formatDate(item.timestamp)}\n            />\n            <CardContent>\n              <div>\n                <img src={item.media_url} alt={item.id} />\n              </div>\n              <hr />\n              <div>\n                <strong>{item.caption || \"   \"}</strong>\n              </div>\n              <div>\n                {item.hashtags &&\n                  item.hashtags.map(hashtag => {\n                    return (\n                      <span className=\"hashtag\" key={hashtag}>\n                        #{hashtag}\n                      </span>\n                    );\n                  })}\n              </div>\n              <div\n                className=\"likes-container\"\n                onClick={() => likeHandler(item.id)}\n              >\n                {item.likedByme ? (\n                  <Favorite style={{ color: \"red\" }} />\n                ) : (\n                  <FavoriteBorder />\n                )}\n                {item.likes && <span>{item.likes} likes</span>}\n              </div>\n              <div>\n                {item.comments.map((comment, index) => {\n                  return (\n                    <div key={index}>\n                      <strong>{comment.username}</strong>:\n                      <span>{comment.comment}</span>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"comments-container\">\n                <FormControl fullWidth={true}>\n                  <InputLabel htmlFor=\"my-input\">Add comment</InputLabel>\n                  <Input\n                    type=\"text\"\n                    id=\"my-input\"\n                    value={comments[item.id] || \"\"}\n                    onChange={event => {\n                      setComments({\n                        ...comments,\n                        [item.id]: event.target.value\n                      });\n                    }}\n                    aria-describedby=\"my-helper-text\"\n                  />\n                </FormControl>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth={false}\n                  onClick={() => commentHandler(item.id)}\n                >\n                  ADD\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}